{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[241],{573:function(t,s,a){\"use strict\";a.r(s);var e=a(12),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"_30-vue项目如何部署-有遇到布署服务器后刷新404问题吗\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_30-vue项目如何部署-有遇到布署服务器后刷新404问题吗\"}},[t._v(\"#\")]),t._v(\" 30.vue项目如何部署？有遇到布署服务器后刷新404问题吗？\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/IceRain-mvc/cdn/img/640-20210928225556833\",alt:\"图片\"}})]),t._v(\" \"),s(\"h2\",{attrs:{id:\"一、如何部署\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、如何部署\"}},[t._v(\"#\")]),t._v(\" 一、如何部署\")]),t._v(\" \"),s(\"p\",[t._v(\"前后端分离开发模式下，前后端是独立布署的，前端只需要将最后的构建物上传至目标服务器的\"),s(\"code\",[t._v(\"web\")]),t._v(\"容器指定的静态目录下即可\")]),t._v(\" \"),s(\"p\",[t._v(\"我们知道\"),s(\"code\",[t._v(\"vue\")]),t._v(\"项目在构建后，是生成一系列的静态文件\"),s(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/IceRain-mvc/cdn/img/640-20210928225602086\",alt:\"图片\"}})]),t._v(\" \"),s(\"p\",[t._v(\"常规布署我们只需要将这个目录上传至目标服务器即可\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// scp 上传 user为主机登录用户，host为主机外网ip, xx为web容器静态资源路径\")]),t._v(\"\\nscp dist\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"zip user@host\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"xx\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"xx\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"xx\\n\")])])]),s(\"p\",[t._v(\"让\"),s(\"code\",[t._v(\"web\")]),t._v(\"容器跑起来，以\"),s(\"code\",[t._v(\"nginx\")]),t._v(\"为例\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-nginx extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-nginx\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"server\")])]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"listen\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"80\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"server_name\")]),t._v(\"  www.xxx.com\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"location\")]),t._v(\" /\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"index\")]),t._v(\"  /data/dist/index.html\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"配置完成记得重启\"),s(\"code\",[t._v(\"nginx\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-nginx extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-nginx\"}},[s(\"code\",[t._v(\"// 检查配置是否正确\\nnginx -t \\n\\n// 平滑重启\\nnginx -s reload\\n\")])])]),s(\"p\",[t._v(\"操作完后就可以在浏览器输入域名进行访问了\")]),t._v(\" \"),s(\"p\",[t._v(\"当然上面只是提到最简单也是最直接的一种布署方式\")]),t._v(\" \"),s(\"p\",[t._v(\"什么自动化，镜像，容器，流水线布署，本质也是将这套逻辑抽象，隔离，用程序来代替重复性的劳动，本文不展开\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"二、404问题\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、404问题\"}},[t._v(\"#\")]),t._v(\" 二、404问题\")]),t._v(\" \"),s(\"p\",[t._v(\"这是一个经典的问题，相信很多同学都有遇到过，那么你知道其真正的原因吗？\")]),t._v(\" \"),s(\"p\",[t._v(\"我们先还原一下场景：\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"vue\")]),t._v(\"项目在本地时运行正常，但部署到服务器中，刷新页面，出现了404错误\")])]),t._v(\" \"),s(\"p\",[t._v(\"先定位一下，HTTP 404 错误意味着链接指向的资源不存在\")]),t._v(\" \"),s(\"p\",[t._v(\"问题在于为什么不存在？且为什么只有\"),s(\"code\",[t._v(\"history\")]),t._v(\"模式下会出现这个问题？\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"为什么history模式下有问题\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么history模式下有问题\"}},[t._v(\"#\")]),t._v(\" 为什么history模式下有问题\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"Vue\")]),t._v(\"是属于单页应用（single-page application）\")]),t._v(\" \"),s(\"p\",[t._v(\"而\"),s(\"code\",[t._v(\"SPA\")]),t._v(\"是一种网络应用程序或网站的模型，所有用户交互是通过动态重写当前页面，前面我们也看到了，不管我们应用有多少页面，构建物都只会产出一个\"),s(\"code\",[t._v(\"index.html\")])]),t._v(\" \"),s(\"p\",[t._v(\"现在，我们回头来看一下我们的\"),s(\"code\",[t._v(\"nginx\")]),t._v(\"配置\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-nginx extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-nginx\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"server\")])]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"listen\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"80\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"server_name\")]),t._v(\"  www.xxx.com\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"location\")]),t._v(\" /\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"index\")]),t._v(\"  /data/dist/index.html\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"可以根据 \"),s(\"code\",[t._v(\"nginx\")]),t._v(\" 配置得出，当我们在地址栏输入 \"),s(\"code\",[t._v(\"www.xxx.com\")]),t._v(\" 时，这时会打开我们 \"),s(\"code\",[t._v(\"dist\")]),t._v(\" 目录下的 \"),s(\"code\",[t._v(\"index.html\")]),t._v(\" 文件，然后我们在跳转路由进入到 \"),s(\"code\",[t._v(\"www.xxx.com/login\")])]),t._v(\" \"),s(\"p\",[t._v(\"关键在这里，当我们在 \"),s(\"code\",[t._v(\"website.com/login\")]),t._v(\" 页执行刷新操作，\"),s(\"code\",[t._v(\"nginx location\")]),t._v(\" 是没有相关配置的，所以就会出现 404 的情况\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"为什么hash模式下没有问题\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么hash模式下没有问题\"}},[t._v(\"#\")]),t._v(\" 为什么hash模式下没有问题\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"router hash\")]),t._v(\" 模式我们都知道是用符号#表示的，如  \"),s(\"code\",[t._v(\"website.com/#/login\")]),t._v(\", \"),s(\"code\",[t._v(\"hash\")]),t._v(\" 的值为 \"),s(\"code\",[t._v(\"#/login\")])]),t._v(\" \"),s(\"p\",[t._v(\"它的特点在于：\"),s(\"code\",[t._v(\"hash\")]),t._v(\" 虽然出现在 \"),s(\"code\",[t._v(\"URL\")]),t._v(\" 中，但不会被包括在 \"),s(\"code\",[t._v(\"HTTP\")]),t._v(\" 请求中，对服务端完全没有影响，因此改变 \"),s(\"code\",[t._v(\"hash\")]),t._v(\" 不会重新加载页面\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"hash\")]),t._v(\" 模式下，仅 \"),s(\"code\",[t._v(\"hash\")]),t._v(\" 符号之前的内容会被包含在请求中，如 \"),s(\"code\",[t._v(\"website.com/#/login\")]),t._v(\" 只有 \"),s(\"code\",[t._v(\"website.com\")]),t._v(\" 会被包含在请求中 ，因此对于服务端来说，即使没有配置\"),s(\"code\",[t._v(\"location\")]),t._v(\"，也不会返回404错误\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"解决方案\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#解决方案\"}},[t._v(\"#\")]),t._v(\" 解决方案\")]),t._v(\" \"),s(\"p\",[t._v(\"看到这里我相信大部分同学都能想到怎么解决问题了，\")]),t._v(\" \"),s(\"p\",[t._v(\"产生问题的本质是因为我们的路由是通过JS来执行视图切换的，\")]),t._v(\" \"),s(\"p\",[t._v(\"当我们进入到子路由时刷新页面，\"),s(\"code\",[t._v(\"web\")]),t._v(\"容器没有相对应的页面此时会出现404\")]),t._v(\" \"),s(\"p\",[t._v(\"所以我们只需要配置将任意页面都重定向到 \"),s(\"code\",[t._v(\"index.html\")]),t._v(\"，把路由交由前端处理\")]),t._v(\" \"),s(\"p\",[t._v(\"对\"),s(\"code\",[t._v(\"nginx\")]),t._v(\"配置文件\"),s(\"code\",[t._v(\".conf\")]),t._v(\"修改，添加\"),s(\"code\",[t._v(\"try_files $uri $uri/ /index.html;\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-nginx extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-nginx\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"server\")])]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"listen\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"80\")])]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"server_name\")]),t._v(\"  www.xxx.com\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"location\")]),t._v(\" /\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"index\")]),t._v(\"  /data/dist/index.html\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token directive\"}},[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"try_files\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$uri\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$uri\")]),t._v(\"/ /index.html\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"修改完配置文件后记得配置的更新\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[t._v(\"nginx \"),s(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-s\")]),t._v(\" reload\\n\")])])]),s(\"p\",[t._v(\"这么做以后，你的服务器就不再返回 404 错误页面，因为对于所有路径都会返回 \"),s(\"code\",[t._v(\"index.html\")]),t._v(\" 文件\")]),t._v(\" \"),s(\"p\",[t._v(\"为了避免这种情况，你应该在 \"),s(\"code\",[t._v(\"Vue\")]),t._v(\" 应用里面覆盖所有的路由情况，然后在给出一个 404 页面\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" router \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"VueRouter\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"mode\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'history'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"routes\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"path\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'*'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"component\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" NotFoundComponent \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"关于后端配置方案还有：\"),s(\"code\",[t._v(\"Apache\")]),t._v(\"、\"),s(\"code\",[t._v(\"nodejs\")]),t._v(\"等，思想是一致的，这里就不展开述说了\")])])}),[],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}