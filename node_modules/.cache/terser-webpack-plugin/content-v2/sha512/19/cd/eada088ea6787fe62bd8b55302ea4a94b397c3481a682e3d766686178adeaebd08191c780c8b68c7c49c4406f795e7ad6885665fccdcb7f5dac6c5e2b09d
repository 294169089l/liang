{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{345:function(t,_,v){\"use strict\";v.r(_);var a=v(12),s=Object(a.a)({},(function(){var t=this,_=t._self._c;return _(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[_(\"h1\",{attrs:{id:\"设计模式\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#设计模式\"}},[t._v(\"#\")]),t._v(\" 设计模式\")]),t._v(\" \"),_(\"h2\",{attrs:{id:\"_1-设计模式是什么-有什么用\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-设计模式是什么-有什么用\"}},[t._v(\"#\")]),t._v(\" 1. 设计模式是什么，有什么用？\")]),t._v(\" \"),_(\"h3\",{attrs:{id:\"是什么\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#是什么\"}},[t._v(\"#\")]),t._v(\" 是什么：\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t设计模式是解决问题的通用开发方案，也是前辈不断摸索总结出来的好的编程方法，可以理解为游戏攻略。\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t设计模式的本质是面向对象设计原则的实际运用，是对类的封装性、继承性和多态性以及类的关联关系和组合关系的充分理解。\")]),t._v(\" \"),_(\"h3\",{attrs:{id:\"目的\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#目的\"}},[t._v(\"#\")]),t._v(\" 目的：\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t使程序更加标准化，代码编制更加工程化，提高代码复用性，可读性。\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t让项目更好维护，减少烂代码。\")]),t._v(\" \"),_(\"h2\",{attrs:{id:\"_2-软件开发原则\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-软件开发原则\"}},[t._v(\"#\")]),t._v(\" 2. 软件开发原则\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t单一职责原则（SRP）：原子性，高内聚低耦合，只做一件事。\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t开放封闭原则（OCP）：对扩展开放，对修改封闭。\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t里氏代换原则（LSP）：继承必须确保超类所拥有的性质在子类中依然成立。\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t依赖倒转原则（DIP）：依赖于抽象而不依赖于具体。\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t接口隔离原则（ISP）：使用多个隔离的接口比使用单独的接口好，尽量为客户端提供单独接口，而不是提供总接口。\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t迪米特法则（LOD）：一个软件实体应该尽可能少的与其他实体发生相互作用。\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t合成/聚合复用原则（CARP）：尽量使用合成、聚合，而不是继承关系达到复用原则。\")]),t._v(\" \"),_(\"h2\",{attrs:{id:\"_3-主流设计模式\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-主流设计模式\"}},[t._v(\"#\")]),t._v(\" 3. 主流设计模式\")]),t._v(\" \"),_(\"h3\",{attrs:{id:\"一、创建型模式\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、创建型模式\"}},[t._v(\"#\")]),t._v(\" 一、创建型模式：\")]),t._v(\" \"),_(\"h4\",{attrs:{id:\"定义\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定义\"}},[t._v(\"#\")]),t._v(\" 定义：\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t\\t描述怎么去创建一个对象，并在创建的同时隐藏创建逻辑的方式，使对象的创建与使用分离。\")]),t._v(\" \"),_(\"h4\",{attrs:{id:\"包括\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#包括\"}},[t._v(\"#\")]),t._v(\" 包括：\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t\\t1. 单例模式\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t\\t2. 工厂模式\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t\\t3. 抽象工厂模式\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t\\t4. 建造者模式\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t\\t5. 原型模式\")]),t._v(\" \"),_(\"h3\",{attrs:{id:\"二、结构性模式\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、结构性模式\"}},[t._v(\"#\")]),t._v(\" 二、结构性模式：\")]),t._v(\" \"),_(\"h4\",{attrs:{id:\"定义-2\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定义-2\"}},[t._v(\"#\")]),t._v(\" 定义：\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t\\t向一个现有的对象添加新的功能，同时又不改变其结构。\")]),t._v(\" \"),_(\"h4\",{attrs:{id:\"包括-2\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#包括-2\"}},[t._v(\"#\")]),t._v(\" 包括：\")]),t._v(\" \"),_(\"ol\",[_(\"li\",[t._v(\"适配器模式\")]),t._v(\" \"),_(\"li\",[t._v(\"桥接模式\")]),t._v(\" \"),_(\"li\",[t._v(\"装饰模式\")]),t._v(\" \"),_(\"li\",[t._v(\"组合模式\")]),t._v(\" \"),_(\"li\",[t._v(\"代理模式\")]),t._v(\" \"),_(\"li\",[t._v(\"外观模式\")]),t._v(\" \"),_(\"li\",[t._v(\"享元模式\")])]),t._v(\" \"),_(\"h3\",{attrs:{id:\"三、行为型模式\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、行为型模式\"}},[t._v(\"#\")]),t._v(\" 三、行为型模式：\")]),t._v(\" \"),_(\"h4\",{attrs:{id:\"定义-3\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定义-3\"}},[t._v(\"#\")]),t._v(\" 定义：\")]),t._v(\" \"),_(\"p\",[t._v(\"​\\t\\t这些设计模式特别关注对象之间的通信。\")]),t._v(\" \"),_(\"h4\",{attrs:{id:\"包括-3\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#包括-3\"}},[t._v(\"#\")]),t._v(\" 包括：\")]),t._v(\" \"),_(\"ol\",[_(\"li\",[t._v(\"模板方法模式\")]),t._v(\" \"),_(\"li\",[t._v(\"命令模式\")]),t._v(\" \"),_(\"li\",[t._v(\"迭代器模式\")]),t._v(\" \"),_(\"li\",[t._v(\"观察者模式\")]),t._v(\" \"),_(\"li\",[t._v(\"中介者模式\")]),t._v(\" \"),_(\"li\",[t._v(\"备忘录模式\")]),t._v(\" \"),_(\"li\",[t._v(\"解释器模式\")]),t._v(\" \"),_(\"li\",[t._v(\"状态模式\")]),t._v(\" \"),_(\"li\",[t._v(\"策略模式\")]),t._v(\" \"),_(\"li\",[t._v(\"职责链模式\")]),t._v(\" \"),_(\"li\",[t._v(\"访问者模式\")])]),t._v(\" \"),_(\"p\",[t._v(\"​\")])])}),[],!1,null,null,null);_.default=s.exports}}]);","extractedComments":[]}