(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{418:function(e,a,s){"use strict";s.r(a);var t=s(12),r=Object(t.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"_05-javscript数组的常用方法有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_05-javscript数组的常用方法有哪些"}},[e._v("#")]),e._v(" 05.Javscript数组的常用方法有哪些？")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/gH31uF9VIibTw1mC4Cicicf1icV0HKZsxUiboRI2wcNNxkOPOVqqgmFl2iczickUAibKR9RHlPhKQ8HhvgexJUzObxUqvg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),e._v(" "),a("p",[e._v("数组基本操作可以归纳为 增、删、改、查，需要留意的是哪些方法会对原数组产生影响，哪些方法不会")]),e._v(" "),a("p",[e._v("下面对数组常用的操作方法做一个归纳")]),e._v(" "),a("h3",{attrs:{id:"增"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增"}},[e._v("#")]),e._v(" 增")]),e._v(" "),a("p",[e._v("下面前三种是对原数组产生影响的增添方法，第四种则不会对原数组产生影响")]),e._v(" "),a("ul",[a("li",[e._v("push()")]),e._v(" "),a("li",[e._v("unshift()")]),e._v(" "),a("li",[e._v("splice()")]),e._v(" "),a("li",[e._v("concat()")])]),e._v(" "),a("h4",{attrs:{id:"push"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[e._v("#")]),e._v(" push()")]),e._v(" "),a("p",[a("code",[e._v("push()")]),e._v("方法接收任意数量的参数，并将它们添加到数组末尾，返回数组的最新长度")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('let colors = []; // 创建一个数组\nlet count = colors.push("red", "green"); // 推入两项\nconsole.log(count) // 2\n')])])]),a("h4",{attrs:{id:"unshift"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unshift"}},[e._v("#")]),e._v(" unshift()")]),e._v(" "),a("p",[e._v("unshift()在数组开头添加任意多个值，然后返回新的数组长度")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('let colors = new Array(); // 创建一个数组\nlet count = colors.unshift("red", "green"); // 从数组开头推入两项\nalert(count); // 2\n')])])]),a("h4",{attrs:{id:"splice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splice"}},[e._v("#")]),e._v(" splice")]),e._v(" "),a("p",[e._v("传入三个参数，分别是开始位置、0（要删除的元素数量）、插入的元素，返回空数组")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('let colors = ["red", "green", "blue"];\nlet removed = colors.splice(1, 0, "yellow", "orange")\nconsole.log(colors) // red,yellow,orange,green,blue\nconsole.log(removed) // []\n')])])]),a("h4",{attrs:{id:"concat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concat"}},[e._v("#")]),e._v(" concat()")]),e._v(" "),a("p",[e._v("首先会创建一个当前数组的副本，然后再把它的参数添加到副本末尾，最后返回这个新构建的数组，不会影响原始数组")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('let colors = ["red", "green", "blue"];\nlet colors2 = colors.concat("yellow", ["black", "brown"]);\nconsole.log(colors); // ["red", "green","blue"]\nconsole.log(colors2); // ["red", "green", "blue", "yellow", "black", "brown"]\n')])])]),a("h3",{attrs:{id:"删"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删"}},[e._v("#")]),e._v(" 删")]),e._v(" "),a("p",[e._v("下面三种都会影响原数组，最后一项不影响原数组：")]),e._v(" "),a("ul",[a("li",[e._v("pop()")]),e._v(" "),a("li",[e._v("shift()")]),e._v(" "),a("li",[e._v("splice()")]),e._v(" "),a("li",[e._v("slice()")])]),e._v(" "),a("h4",{attrs:{id:"pop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pop"}},[e._v("#")]),e._v(" pop()")]),e._v(" "),a("p",[a("code",[e._v("pop()")]),e._v(" 方法用于删除数组的最后一项，同时减少数组的"),a("code",[e._v("length")]),e._v(" 值，返回被删除的项")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('let colors = ["red", "green"]\nlet item = colors.pop(); // 取得最后一项\nconsole.log(item) // green\nconsole.log(colors.length) // 1\n')])])]),a("h4",{attrs:{id:"shift"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shift"}},[e._v("#")]),e._v(" shift()")]),e._v(" "),a("p",[a("code",[e._v("shift()")]),e._v("方法用于删除数组的第一项，同时减少数组的"),a("code",[e._v("length")]),e._v(" 值，返回被删除的项")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('let colors = ["red", "green"]\nlet item = colors.shift(); // 取得第一项\nconsole.log(item) // red\nconsole.log(colors.length) // 1\n')])])]),a("h4",{attrs:{id:"splice-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splice-2"}},[e._v("#")]),e._v(" splice()")]),e._v(" "),a("p",[e._v("传入两个参数，分别是开始位置，删除元素的数量，返回包含删除元素的数组")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('let colors = ["red", "green", "blue"];\nlet removed = colors.splice(0,1); // 删除第一项\nconsole.log(colors); // green,blue\nconsole.log(removed); // red，只有一个元素的数组\n')])])]),a("h4",{attrs:{id:"slice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slice"}},[e._v("#")]),e._v(" slice()")]),e._v(" "),a("p",[e._v("slice() 用于创建一个包含原有数组中一个或多个元素的新数组，不会影响原始数组")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('let colors = ["red", "green", "blue", "yellow", "purple"];\nlet colors2 = colors.slice(1);\nlet colors3 = colors.slice(1, 4);\nconsole.log(colors)   // red,green,blue,yellow,purple\nconcole.log(colors2); // green,blue,yellow,purple\nconcole.log(colors3); // green,blue,yellow\n')])])]),a("h3",{attrs:{id:"改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#改"}},[e._v("#")]),e._v(" 改")]),e._v(" "),a("p",[e._v("即修改原来数组的内容，常用"),a("code",[e._v("splice")])]),e._v(" "),a("h4",{attrs:{id:"splice-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splice-3"}},[e._v("#")]),e._v(" splice()")]),e._v(" "),a("p",[e._v("传入三个参数，分别是开始位置，要删除元素的数量，要插入的任意多个元素，返回删除元素的数组，对原数组产生影响")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('let colors = ["red", "green", "blue"];\nlet removed = colors.splice(1, 1, "red", "purple"); // 插入两个值，删除一个元素\nconsole.log(colors); // red,red,purple,blue\nconsole.log(removed); // green，只有一个元素的数组\n')])])]),a("h3",{attrs:{id:"查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查"}},[e._v("#")]),e._v(" 查")]),e._v(" "),a("p",[e._v("即查找元素，返回元素坐标或者元素值")]),e._v(" "),a("ul",[a("li",[e._v("indexOf()")]),e._v(" "),a("li",[e._v("includes()")]),e._v(" "),a("li",[e._v("find()")])]),e._v(" "),a("h4",{attrs:{id:"indexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexof"}},[e._v("#")]),e._v(" indexOf()")]),e._v(" "),a("p",[e._v("返回要查找的元素在数组中的位置，如果没找到则返回-1")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1];\nnumbers.indexOf(4) // 3\n")])])]),a("h4",{attrs:{id:"includes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#includes"}},[e._v("#")]),e._v(" includes()")]),e._v(" "),a("p",[e._v("返回要查找的元素在数组中的位置，找到返回"),a("code",[e._v("true")]),e._v("，否则"),a("code",[e._v("false")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1];\nnumbers.includes(4) // true\n")])])]),a("h4",{attrs:{id:"find"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[e._v("#")]),e._v(" find()")]),e._v(" "),a("p",[e._v("返回第一个匹配的元素")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('const people = [\n    {\n        name: "Matt",\n        age: 27\n    },\n    {\n        name: "Nicholas",\n        age: 29\n    }\n];\npeople.find((element, index, array) => element.age < 28) // // {name: "Matt", age: 27}\n')])])]),a("h2",{attrs:{id:"二、排序方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、排序方法"}},[e._v("#")]),e._v(" 二、排序方法")]),e._v(" "),a("p",[e._v("数组有两个方法可以用来对元素重新排序：")]),e._v(" "),a("ul",[a("li",[e._v("reverse()")]),e._v(" "),a("li",[e._v("sort()")])]),e._v(" "),a("h3",{attrs:{id:"reverse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reverse"}},[e._v("#")]),e._v(" reverse()")]),e._v(" "),a("p",[e._v("顾名思义，将数组元素方向排列")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let values = [1, 2, 3, 4, 5];\nvalues.reverse();\nalert(values); // 5,4,3,2,1\n")])])]),a("h3",{attrs:{id:"sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[e._v("#")]),e._v(" sort()")]),e._v(" "),a("p",[e._v("sort()方法接受一个比较函数，用于判断哪个值应该排在前面")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function compare(value1, value2) {\n    if (value1 < value2) {\n        return -1;\n    } else if (value1 > value2) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\nlet values = [0, 1, 5, 10, 15];\nvalues.sort(compare);\nalert(values); // 0,1,5,10,15\n")])])]),a("h2",{attrs:{id:"三、转换方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、转换方法"}},[e._v("#")]),e._v(" 三、转换方法")]),e._v(" "),a("p",[e._v("常见的转换方法有：")]),e._v(" "),a("h3",{attrs:{id:"join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[e._v("#")]),e._v(" join()")]),e._v(" "),a("p",[e._v("join() 方法接收一个参数，即字符串分隔符，返回包含所有项的字符串")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('let colors = ["red", "green", "blue"];\nalert(colors.join(",")); // red,green,blue\nalert(colors.join("||")); // red||green||blue\n')])])]),a("h2",{attrs:{id:"四、迭代方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、迭代方法"}},[e._v("#")]),e._v(" 四、迭代方法")]),e._v(" "),a("p",[e._v("常用来迭代数组的方法（都不改变原数组）有如下：")]),e._v(" "),a("ul",[a("li",[e._v("some()")]),e._v(" "),a("li",[e._v("every()")]),e._v(" "),a("li",[e._v("forEach()")]),e._v(" "),a("li",[e._v("filter()")]),e._v(" "),a("li",[e._v("map()")])]),e._v(" "),a("h3",{attrs:{id:"some"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#some"}},[e._v("#")]),e._v(" some()")]),e._v(" "),a("p",[e._v("对数组每一项都运行传入的函数，如果有一项函数返回 true ，则这个方法返回 true")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1];\nlet someResult = numbers.every((item, index, array) => item > 2);\nconsole.log(someResult) // true\n")])])]),a("h3",{attrs:{id:"every"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#every"}},[e._v("#")]),e._v(" every()")]),e._v(" "),a("p",[e._v("对数组每一项都运行传入的函数，如果对每一项函数都返回 true ，则这个方法返回 true")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1];\nlet everyResult = numbers.every((item, index, array) => item > 2);\nconsole.log(everyResult) // false\n")])])]),a("h3",{attrs:{id:"foreach"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foreach"}},[e._v("#")]),e._v(" forEach()")]),e._v(" "),a("p",[e._v("对数组每一项都运行传入的函数，没有返回值")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1];\nnumbers.forEach((item, index, array) => {\n    // 执行某些操作\n});\n")])])]),a("h3",{attrs:{id:"filter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[e._v("#")]),e._v(" filter()")]),e._v(" "),a("p",[e._v("对数组每一项都运行传入的函数，函数返回 "),a("code",[e._v("true")]),e._v(" 的项会组成数组之后返回")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1];\nlet filterResult = numbers.filter((item, index, array) => item > 2);\nconsole.log(filterResult); // 3,4,5,4,3\n")])])]),a("h3",{attrs:{id:"map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[e._v("#")]),e._v(" map()")]),e._v(" "),a("p",[e._v("对数组每一项都运行传入的函数，返回由每次函数调用的结果构成的数组")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1];\nlet mapResult = numbers.map((item, index, array) => item * 2);\nconsole.log(mapResult) // 2,4,6,8,10,8,6,4,2\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);