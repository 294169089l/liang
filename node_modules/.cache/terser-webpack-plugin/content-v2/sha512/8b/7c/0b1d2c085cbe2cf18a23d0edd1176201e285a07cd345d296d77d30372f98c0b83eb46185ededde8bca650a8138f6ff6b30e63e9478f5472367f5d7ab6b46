{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{535:function(t,s,a){\"use strict\";a.r(s);var r=a(12),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"_01-说说你对-typescript-的理解-与-javascript-的区别\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_01-说说你对-typescript-的理解-与-javascript-的区别\"}},[t._v(\"#\")]),t._v(\" 01.说说你对 TypeScript 的理解？与 JavaScript 的区别？\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/IceRain-mvc/cdn/img/640-20210928213708392\",alt:\"图片\"}})]),t._v(\" \"),s(\"h2\",{attrs:{id:\"一、是什么\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、是什么\"}},[t._v(\"#\")]),t._v(\" 一、是什么\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"TypeScript\")]),t._v(\" 是 \"),s(\"code\",[t._v(\"JavaScript\")]),t._v(\" 的类型的超集，支持\"),s(\"code\",[t._v(\"ES6\")]),t._v(\"语法，支持面向对象编程的概念，如类、接口、继承、泛型等\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"超集，不得不说另外一个概念，子集，怎么理解这两个呢，举个例子，如果一个集合A里面的的所有元素集合B里面都存在，那么我们可以理解集合B是集合A的超集，集合A为集合B的子集\")])]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/IceRain-mvc/cdn/img/640-20210928213714245\",alt:\"图片\"}})]),t._v(\" \"),s(\"p\",[t._v(\"其是一种静态类型检查的语言，提供了类型注解，在代码编译阶段就可以检查出数据类型的错误\")]),t._v(\" \"),s(\"p\",[t._v(\"同时扩展了\"),s(\"code\",[t._v(\"JavaScript\")]),t._v(\" 的语法，所以任何现有的\"),s(\"code\",[t._v(\"JavaScript\")]),t._v(\" 程序可以不加改变的在 \"),s(\"code\",[t._v(\"TypeScript\")]),t._v(\" 下工作\")]),t._v(\" \"),s(\"p\",[t._v(\"为了保证兼容性，\"),s(\"code\",[t._v(\"typescript\")]),t._v(\"在编译阶段需要编译器编译成纯\"),s(\"code\",[t._v(\"Javascript\")]),t._v(\"来运行，是为大型应用之开发而设计的语言，如下：\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"tsx\")]),t._v(\"文件如下：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-ts extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-ts\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" hello \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hello World!\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"console\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"hello\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"编译文件后：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-ts extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-ts\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" hello \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hello World!\"')]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"console\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"hello\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"h2\",{attrs:{id:\"二、特性\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、特性\"}},[t._v(\"#\")]),t._v(\" 二、特性\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"typescript\")]),t._v(\"的特性主要有如下：\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"「类型批注和编译时类型检查」 ：在编译时批注变量类型\")]),t._v(\" \"),s(\"li\",[t._v(\"「类型推断」：ts中没有批注变量类型会自动推断变量的类型\")]),t._v(\" \"),s(\"li\",[t._v(\"「类型擦除」：在编译过程中批注的内容和接口会在运行时利用工具擦除\")]),t._v(\" \"),s(\"li\",[t._v(\"「接口」：ts中用接口来定义对象类型\")]),t._v(\" \"),s(\"li\",[t._v(\"「枚举」：用于取值被限定在一定范围内的场景\")]),t._v(\" \"),s(\"li\",[t._v(\"「Mixin」：可以接受任意类型的值\")]),t._v(\" \"),s(\"li\",[t._v(\"「泛型编程」：写代码时使用一些以后才指定的类型\")]),t._v(\" \"),s(\"li\",[t._v(\"「名字空间」：名字只在该区域内有效，其他区域可重复使用该名字而不冲突\")]),t._v(\" \"),s(\"li\",[t._v(\"「元组」：元组合并了不同类型的对象，相当于一个可以装不同类型数据的数组\")]),t._v(\" \"),s(\"li\",[t._v(\"...\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"类型批注\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#类型批注\"}},[t._v(\"#\")]),t._v(\" 类型批注\")]),t._v(\" \"),s(\"p\",[t._v(\"通过类型批注提供在编译时启动类型检查的静态类型，这是可选的，而且可以忽略而使用\"),s(\"code\",[t._v(\"JavaScript\")]),t._v(\"常规的动态类型\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-ts extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-ts\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Add\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"left\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"number\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" right\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"number\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"number\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" left \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" right\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"对于基本类型的批注是\"),s(\"code\",[t._v(\"number\")]),t._v(\"、\"),s(\"code\",[t._v(\"bool\")]),t._v(\"和\"),s(\"code\",[t._v(\"string\")]),t._v(\"，而弱或动态类型的结构则是\"),s(\"code\",[t._v(\"any\")]),t._v(\"类型\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"类型推断\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#类型推断\"}},[t._v(\"#\")]),t._v(\" 类型推断\")]),t._v(\" \"),s(\"p\",[t._v(\"当类型没有给出时，TypeScript编译器利用类型推断来推断类型，如下：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-ts extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-ts\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" str \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'string'\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"变量\"),s(\"code\",[t._v(\"str\")]),t._v(\"被推断为字符串类型，这种推断发生在初始化变量和成员，设置默认参数值和决定函数返回值时\")]),t._v(\" \"),s(\"p\",[t._v(\"如果由于缺乏声明而不能推断出类型，那么它的类型被视作默认的动态\"),s(\"code\",[t._v(\"any\")]),t._v(\"类型\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"接口\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#接口\"}},[t._v(\"#\")]),t._v(\" 接口\")]),t._v(\" \"),s(\"p\",[t._v(\"接口简单来说就是用来描述对象的类型 数据的类型有\"),s(\"code\",[t._v(\"number\")]),t._v(\"、\"),s(\"code\",[t._v(\"null\")]),t._v(\"、\"),s(\"code\",[t._v(\"string\")]),t._v(\"等数据格式，对象的类型就是用接口来描述的\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-ts extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-ts\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"interface\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    name\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"string\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    age\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"number\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" tom\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" Person \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    name\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'Tom'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    age\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"25\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),s(\"h2\",{attrs:{id:\"三、区别\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、区别\"}},[t._v(\"#\")]),t._v(\" 三、区别\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"TypeScript 是 JavaScript 的超集，扩展了 JavaScript 的语法\")]),t._v(\" \"),s(\"li\",[t._v(\"TypeScript 可处理已有的 JavaScript 代码，并只对其中的 TypeScript 代码进行编译\")]),t._v(\" \"),s(\"li\",[t._v(\"TypeScript 文件的后缀名 .ts （.ts，.tsx，.dts），JavaScript 文件是 .js\")]),t._v(\" \"),s(\"li\",[t._v(\"在编写 TypeScript 的文件的时候就会自动编译成 js 文件\")])]),t._v(\" \"),s(\"p\",[t._v(\"更多的区别如下图所示：\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://cdn.jsdelivr.net/gh/IceRain-mvc/cdn/img/640-20210928213743059\",alt:\"图片\"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}